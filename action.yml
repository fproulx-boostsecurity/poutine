name: poutine - GitHub Actions SAST
description: |
  BoostSecurity.io’s poutine detects vulnerabilities and misconfigurations in your GitHub Actions workflows.
  Designed to streamline security analysis, poutine scans your repository’s CI/CD pipelines.
  It offers insights to secure your software supply chain efficiently.
inputs:
  path:
    description: 'Path to the local repository to analyze.'
    required: true
    default: '.'
    
env:
  PINNED_VERSION: v0.9.3
  PINNED_ARCH: poutine_Linux_x86_64.tar.gz
  PINNED_HASH: 938c36de89eea18d69c8d5605a64ef1573e682cfd02b61d4cc2de3b0663a63bc
    
runs:
  using: composite
  steps:
    - name: Download and Setup
      shell: bash
      run: |
        # Create a temp dir for the tool and its results
        POUTINE_TOOL_DIR=$(mktemp -d)
        cd "${POUTINE_TOOL_DIR}"
        echo "POUTINE_TOOL_DIR=${POUTINE_TOOL_DIR}" >> "${GITHUB_ENV}"
        
        # Download tool archive and verify checksum
        curl -sLO "https://github.com/boostsecurityio/poutine/releases/download/${PINNED_VERSION}/${PINNED_ARCH}"
        echo "${PINNED_HASH}  ${PINNED_ARCH}" | shasum -a 256 --check
        
        # Decompress the tool
        tar -xvzf "${PINNED_ARCH}"
        
    - name: Analyze the repository
      shell: bash
      working-directory: ${{ env.POUTINE_TOOL_DIR }}
      run: |
        POUTINE_SARIF_FILE="${POUTINE_TOOL_DIR}/results.sarif"
        echo "POUTINE_SARIF_FILE=${POUTINE_SARIF_FILE}" >> "${GITHUB_OUTPUT}"
        "${POUTINE_TOOL_DIR}/poutine" -format sarif analyze_local "${TARGET_PATH}" > "${POUTINE_SARIF_FILE}"
      env:
        TARGET_PATH: ${{ inputs.path }}

    - name: Upload SARIF Findings
      uses: github/codeql-action/upload-sarif@4355270be187e1b672a7a1c7c7bae5afdc1ab94a # v3.24.10
      with:
        sarif_file: ${{ env.POUTINE_SARIF_FILE }}
